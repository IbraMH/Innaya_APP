import 'package:dartz/dartz.dart';import 'package:innaya_app/core/error/exceptions.dart';import 'package:innaya_app/core/error/failure.dart';import 'package:innaya_app/core/network/network_info.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_change_pass.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_verfication_account.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_verfication_forget_pass.dart';import 'package:innaya_app/features/feature_auth/data/model/result_respone.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_change_pass.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_forget_password.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_verfication.dart';class ChangePassRepostriyImpl implements RepostriyChangePass{  NetWorkInfo? netWorkInfo;  RemoteChangePass? remoteChangePass;  ChangePassRepostriyImpl(      {this.netWorkInfo, this.remoteChangePass});  @override  Future<Either<Failure, ResultRespone>> changePassUser(Body,type)async {    bool isConnect=await netWorkInfo!.isConnectNetwork;    if(isConnect){      try{       final result= await remoteChangePass!.changePass(Body,type);       return Right(result);      }catch(e){        return  Left(ServerFailure());      }    }else{      return Left(ServerFailure());    }    // TODO: implement verficationAccount  }}
import 'package:dartz/dartz.dart';import 'package:innaya_app/core/error/failure.dart';import 'package:innaya_app/core/network/network_info.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_register.dart';import 'package:innaya_app/features/feature_auth/data/model/result_respone.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_register.dart';class RegisterRepostriyImpl implements RepostriyRegister{  NetWorkInfo? netWorkInfo;  RemoteRegisterResourse ?registerResourse;  RegisterRepostriyImpl({this.netWorkInfo, this.registerResourse});  @override  Future<Either<Failure, ResultRespone>> registerAndUpdeUser(Map<String, Object> mapData,int type)async {    bool isConnect = await netWorkInfo!.isConnectNetwork;    if(isConnect){      try {        final remoteResultResponeRegister =        await registerResourse!.registerAndUpdeUser(mapData,type);        return Right(remoteResultResponeRegister);        // TODO: implement registerUser      } catch (e) {        return Left(ServerFailure());      }    }else{      return Left(ServerFailure());    }  }}
import 'package:dartz/dartz.dart';import 'package:innaya_app/core/error/exceptions.dart';import 'package:innaya_app/core/error/failure.dart';import 'package:innaya_app/core/network/network_info.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_login.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_login_with_social.dart';import 'package:innaya_app/features/feature_auth/data/dataresourse/remote_register.dart';import 'package:innaya_app/features/feature_auth/data/model/result_respone.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_login.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_login_with_scoial.dart';import 'package:innaya_app/features/feature_auth/domain/repostriy/repostriy_register.dart';class LoginWithSocialRepostriyImpl implements RepostriyLoginWithSocial{  NetWorkInfo? netWorkInfo;  RemoteLoginWithSocialResourse ?remoteLoginWithSocialResourse;  LoginWithSocialRepostriyImpl({this.netWorkInfo, this.remoteLoginWithSocialResourse});  @override  Future<Either<Failure, ResultRespone>> loginWithSocialUser(var body)async {    bool isConnect = await netWorkInfo!.isConnectNetwork;    if(isConnect){      try {        final remoteResultResponeLogin =        await remoteLoginWithSocialResourse!.loginWithSocialUser(body);        return Right(remoteResultResponeLogin);        // TODO: implement registerUser      } catch (e) {        return  Left(ServerFailure());      }    }else{      return Left(ServerFailure());    }  }}